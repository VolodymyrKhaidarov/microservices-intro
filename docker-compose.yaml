version: '3'

services:
  zookeeper:
    image: 'wurstmeister/zookeeper'
    ports:
      - "2181:2181"

  kafka:
    image: 'wurstmeister/kafka'
    ports:
      - "9092-9093:9092-9093"
    env_file:
      - 'config/kafka.env'
  aws:
    image: 'localstack/localstack'
    ports:
      - '4566:4566'
      - '4510-4559:4510-4559'
    volumes:
      - './config/aws.sh:/etc/localstack/init/ready.d/aws.sh'
      - '${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'

  eureka-service-registry:
    build: './eureka-service-registry'
    image: 'eureka-service-registry:1.0.0'
    ports:
      - '8761:8761'
    env_file:
      - 'config/eureka.env'

  gateway-service:
    build: './gateway-service'
    image: 'gateway-service:1.0.0'
    depends_on:
      - 'eureka-service-registry'
    ports:
      - '8080:8080'
    env_file:
      - 'config/gateway.env'

  resource-service:
    build: './resource-service'
    image: 'resource-service:1.0.0'
    depends_on:
      - 'resource-db'
      - 'eureka-service-registry'
      - 'gateway-service'
    ports:
      - '8081:8080'
    env_file:
      - 'config/resource.env'

  song-service:
    build: './song-service'
    image: 'song-service:1.0.0'
    deploy:
      mode: 'replicated'
      replicas: 2
    depends_on:
      - 'song-db'
      - 'eureka-service-registry'
      - 'gateway-service'
    ports:
      - '8082-8083:8080'
    env_file:
      - 'config/song.env'

  resource-processor:
    build: './resource-processor'
    image: 'resource-processor:1.0.0'
    depends_on:
      - 'eureka-service-registry'
      - 'gateway-service'
    ports:
      - '8084:8080'
    env_file:
      - 'config/processor.env'

  resource-db:
    image: 'postgres:16.1'
    ports:
      - '5433:5432'
    env_file:
      - 'config/resource.env'
    volumes:
      - './config/resource.sql:/docker-entrypoint-initdb.d/resource.sql'

  song-db:
    image: 'postgres:16.1'
    ports:
      - '5434:5432'
    env_file:
      - 'config/song.env'
    volumes:
      - './config/song.sql:/docker-entrypoint-initdb.d/song.sql'