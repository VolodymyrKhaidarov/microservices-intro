version: '3'

services:
  resource-service:
    image: 'resource-service:0.0.1'
    container_name: 'resource-service-v1'
    depends_on:
      - 'resource-db'
    ports:
      - '8080:8080'
    environment:
      - 'SONG_SERVICE_URL=http://song-service:8080/songs/'
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://resource-db:5432/resource-db'
      - 'SPRING_DATASOURCE_USERNAME=admin'
      - 'SPRING_DATASOURCE_PASSWORD=password'
      - 'SPRING_SERVLET_MULTIPART_MAX-FILE-SIZE=100MB'
      - 'SPRING_SERVLET_MULTIPART_MAX-REQUEST-SIZE=100MB'

  song-service:
    image: 'song-service:0.0.1'
    container_name: 'song-service-v1'
    depends_on:
      - 'song-db'
    ports:
      - '8081:8080'
    environment:
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://song-db:5432/song-db'
      - 'SPRING_DATASOURCE_USERNAME=admin'
      - 'SPRING_DATASOURCE_PASSWORD=password'

  resource-db:
    image: 'postgres:16.1'
    container_name: "resource-db"
    ports:
      - '5433:5432'
    environment:
      - 'POSTGRES_USER=admin'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_DB=resource-db'
    volumes:
      - './resource.sql:/docker-entrypoint-initdb.d/resource.sql'

  song-db:
    image: 'postgres:16.1'
    container_name: "song-db"
    ports:
      - '5434:5432'
    environment:
      - 'POSTGRES_USER=admin'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_DB=song-db'
    volumes:
      - './song.sql:/docker-entrypoint-initdb.d/song.sql'